# ███████████████████████████████████████████████████████████
# ██   **Custom script paths to be injected/run**
# ██ 
# ██   Use this as a template
# ██   Required per NPC; can be used for multiple NPC's
# ██   Assign "HatiusCosaintusHubNpc" to the npc you would like to use 
# ██   /npc assignment --set HatiusCosaintusHubNpc 
# ██ 
# ██ [ NPC Assignment ] ██
HatiusCosaintusHubNpc: 
  type: assignment 
  debug: true 
  actions: 
    on assignment: 
    - trigger name:click state:true 
    - trigger name:proximity state:true radius:4
    on exit proximity:
      - inject locally Disengage Instantly
    on click:
      - if !<player.has_flag[HatiusCosaintusHubNpc_stage]>:
        - flag player interacting_npc:<queue.script>
      - inject locally NPC_Initiation_script
  Disengage:
    - flag player interacting_npc:!
    - flag player sig:!
    - foreach <player.list_flags[npc.hatius.]>
      - flag player <def[value]>:!
# ██   This does not change.
# ███████████████████████████████████████████████████████████

# ███████████████████████████████████████████████████████████
# ██    Script Processing for command chat hover procedure
# ██   
  opt_loop: 
  - define sig <util.random.uuid> 
  - flag player sig:<def[sig]> 
  - foreach <script.yaml_key[<def[1]>]>: 
    - define value <def[value].split[/].limit[2]> 
    - define interacting <player.flag[interacting_npc]>
    - narrate "<proc[option].context[<def[value].get[2]>|<def[value].get[1]>|<npc>|<def[sig]>|<def[interacting]>]>" 
# ██
# ██   This does not change.
# ███████████████████████████████████████████████████████████



# ███████████████████████████████████████████████████████████
# ██   Custom script paths to be injected/run 
# ██   
# ██   These are where the scripts go that options
# ██   are clicked to run, or run on events
# ██ 
# ██   [ Selection Process Selection ]
  NPC_Initiation_script:
  - if <player.flag[played].is[LESS].than[43200]>:
    - narrate format:cgf "<script.yaml_key[d1]>"
    - wait 2s
    - run locally opt_loop def:o1 instantly
  - else:
    - narrate format:cgf "<script.yaml_key[d2]>"
    - wait 2s
    - run locally opt_loop def:o2 instantly

  ImNotNew:
    - narrate format:cgf "<script.yaml_key[d3]>"
    - wait 2s
    - run locally opt_loop def:o2 instantly
  WhatReset:
    - narrate format:cgf "<script.yaml_key[d4]>"
    - wait 2s
    - foreach <player.list_flags[npc.hatius.]>
      - flag player <def[value]>:!
    - run locally opt_loop def:o2 instantly

  ReturnMenu:
    - choose <player.flag[npc.hatius.firstmenu]||7>:
      - case "1":
        #       WHAT | WHERE
        - run locally opt_loop def:o3 instantly
      - case "2":
        #     |      | WHERE
        - run locally opt_loop def:o4 instantly
      - case "3":
        #     | WHAT | 
        - run locally opt_loop def:o5 instantly
      - case "4":
        # WHO | WHAT | 
        - run locally opt_loop def:o6 instantly
      - case "5":
        # WHO |      | WHERE
        - run locally opt_loop def:o7 instantly
      - case "6":
        # WHO |      | 
        - run locally opt_loop def:o8 instantly
      - case "7":
        - inject locally WhatReset instantly

  WhoAreYou:
    - narrate format:cgf "<script.yaml_key[d6]>"
      - wait 2s
      - if <player.has_flag[npc.hatius.firstmenu].not>:
        - flag player npc.hatius.firstmenu:1
      - else if <player.flag[npc.hatius.firstmenu].contain_any[4|5|6]>:
        - choose <player.flag[npc.hatius.firstmenu]>:
          - case "4":
            - flag player npc.hatius.firstmenu:3
          - case "5":
            - flag player npc.hatius.firstmenu:2
          - case "6":
            - inject locally ThanksBye Instantly
      - inject locally ReturnMenu instantly

  WhereAreWe:
    - narrate format:cgf "<script.yaml_key[d7]>"
      - wait 2s
      - if <player.has_flag[npc.hatius.firstmenu].not>:
        - flag player npc.hatius.firstmenu:4
      - else if <player.flag[npc.hatius.firstmenu].contains_any[1|2|5]>:
        - choose <player.flag[npc.hatius.firstmenu]>:
          - case "1":
            - flag player npc.hatius.firstmenu:3
          - case "2":
            - inject locally ThanksBye Instantly
          - case "5":
            - flag player npc.hatius.firstmenu:6
      - inject locally ReturnMenu instantly

  WhatCanYouDo:
    - narrate format:cgf "<script.yaml_key[d8]>"
      - wait 2s
      - if <player.has_flag[npc.hatius.firstmenu].not>:
        - flag player npc.hatius.firstmenu:5
      - else if <player.flag[npc.hatius.firstmenu].contains_any[1|3|4]>:
        - choose <player.flag[npc.hatius.firstmenu]>:
          - case "1":
            - flag player npc.hatius.firstmenu:2
          - case "3":
            - inject locally ThanksBye Instantly
          - case "4":
            - flag player npc.hatius.firstmenu:6
      - inject locally ReturnMenu instantly
      #- run locally opt_loop def:o9 instantly

  YesList:
    - narrate
    - wait 2s
    - inventory open d:in@HatiusCosaintusHelpList
  NoList:
    - if <player.flag[npc.hatius.firstmenu].contains_any[2|3|6]>:
      - inject locally ThanksBye Instantly
    - else:
      - narrate format:cgf "<script.yaml_key[d5]>"
      - wait 2s
      - inject locally ReturnMenu instantly


  ThanksBye:
  - narrate format:cgf "<script.yaml_key[d9]>"
  - inject locally Disengage Instantly



  script:
  - narrate format:cgf "<script.yaml_key[]>"
# ███████████████████████████████████████████████████████████
# ██   Custom script paths to be injected/run 
# ██ 
# ██   These are the options that appear in chat.
# ██   These must be separated by Script / Text
# ██   Usage: "ScriptName/Message"
# ██ 
# ██   [ Option Selections ]

  o1: 
  - "ImNotNew/<&a>What tells you I'm new around here?"
  - "WhoAreYou/<&a>Who are you?"
  - "WhereAreWe/<&a>Where are we?"
  - "WhatCanYouDo/<&a>What can you do?"
  o2: 
  - "WhoAreYou/<&a>Who are you?"
  - "WhereAreWe/<&a>Where are we?"
  - "WhatCanYouDo/<&a>What can you do?"
  o3: 
  - "WhereAreWe/<&a>Where are we?"
  - "WhatCanYouDo/<&a>What can you do?"
  o4: 
  - "WhereAreWe/<&a>Where are we?"
  o5: 
  - "WhatCanYouDo/<&a>What can you do?"
  o6: 
  - "WhoAreYou/<&a>Who are you?"
  - "WhatCanYouDo/<&a>What can you do?"
  o7: 
  - "WhoAreYou/<&a>Who are you?"
  - "WhereAreWe/<&a>Where are we?"
  o8: 
  - "WhoAreYou/<&a>Who are you?"

  o9:
  - "YesList/<&a>Yes"
  - "NoList/<&a>No"

  o: 
  - "/<&a>Shouldn't you be in Lumbridge?"
  - "/<&a>Who is Hans?"
  - "/<&a>What does your name mean?"
  - "/<&a>Nobody likes you."


  o: 
  - "/<&a>"
  - "/<&a>"
  - "/<&a>"
# ███████████████████████████████████████████████████████████
# ██   Dialog Transcripts to be narrated
# ██ 
# ██   Simple, easy key names are essential for
# ██   clean and easy to read scripts
# ██   this is basically a library for dialog
# ██
# ██ [ NPC dialogue ] ██
  d1: "Well, hello there! I see you're new around here. What can I do for you?"
  d2: "Well, hello there! What can I do for you?"
  d3: "Oh, sorry to assume, it's just that Hans tells me you've spent <&6><player.statistic[PLAY_ONE_MINUTE].div_int[1728000].round_down><&f> days, <&6><player.statistic[PLAY_ONE_MINUTE].div_int[72000].round_down.mod[24]><&f> hours, <&6><player.statistic[PLAY_ONE_MINUTE].div_int[1200].round_down.mod[60]><&f> minutes in the world since you arrived <&6><util.date.time.duration.sub[<player.first_played>].in_days.round_down><&f> days ago."
  d4: "What?"
  d5: "Was there anything else I can do for you?"
  d6: "My name is Hatius Cosaintus. I'm the Taskmaster for the Lumbridge & Draynor Diaries."
  d7: "Here on this ship, you're at the main Hub. You can find more information from the Information Guide somewhere here around the Gielinor area."
  d8: "I can help you by guiding you to the various Guides, Tutorial and Settings Helpers around here in the Gielinor area. Would you like to see a list?"
  d9: "Come see me if you need anything else."




HatiusCosaintusHelpList:
  debug: false
  type: inventory
  inventory: Dispenser
  title: custom title 
  size: 9
  slots:
    - "[] [] []"
    - "[] [] []"
    - "[] [] []"
HatiusCosaintusHelpListHandler:
  debug: false
  type: world
  events:
    on player clicks in HatiusCosaintusHelpList:
      - choose <context.raw_slot>:
        - case "1":
        - case "2":
        - case "3":
        - case "4":
        - case "5":
        - case "6":
        - case "7":
        - case "8":
        - case "9":
