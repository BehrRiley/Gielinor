# ████████████████████████████████████████████████████
# ██   Passive Skill | Roll
# ██   
# ██   Rolling is a passive skill which allows the player to reduce fall damage.
# ██   Every level, the chance for a successful roll increases by 0.5%,
# ██   with a maximum chance of 50% at level 99. As rolling is a passive skill, 
# ██   it will be activated simply by taking fall damage. When activated,
# ██   it can negate up to 7 hitpoints, or 3.5 hearts.
# ██   
# ██   Active Ability | Tactical Roll
# ██   
# ██   Tactical Roll is an active skill activated by
# ██   sneaking while falling. It is only effective
# ██   if the sneaking is started 20 blocks or fewer
# ██   before impact. Every level, the chance for a
# ██   successful Graceful Roll is increased by 1%,
# ██   with a cap of 99% at level 99.
# ██   It can negate up to 14 hitpoints, or 7 hearts.
# ██   
# ██ [ World Script ] ██
Agility_Rolls:
  type: world
  debug: false
  rollevent:
    - define Fall <proc[Rolled].context[<context.entity>|<context.damage>]>
    - narrate "*Rolled*"
    - determine <def[Fall]>
  events:
    on entity damaged by Fall:
      - if <player.is_sneaking>:
        - if <player.has_flag[HasTacticallyRolled]>:
          - inject locally rollevent instantly
        - define Fall <proc[TacticalRoll].context[<context.entity>|<context.damage>]>
        - flag player HasTacticallyRolled duration:1m
        - narrate "*Tactically Rolled*"
        - determine <def[Fall]>
      - inject locally rollevent instantly

TacticalRoll:
  type: procedure
  debug: false
  definitions: EntityA|Damage
  script:
    #██ Entity [A] Agility Level
    - define Agility <def[EntityA].flag[AgilityLevel]||1>
    - define Fall <def[Agility].mul[.01].add[.01]>
    - if <util.random.decimal> < <def[Fall]>:
      - if <def[Damage]> > 14:
        - determine <def[Damage].sub[14]>
      - determine cancelled

Rolled:
  type: procedure
  debug: false
  definitions: EntityA|Damage
  script:
    #██ Entity [A] Agility Level
    - define Agility <def[EntityA].flag[AgilityLevel]||1>
    - define Fall <def[Agility].mul[.005].add[.005]>
    - if <util.random.decimal> < <def[Fall]>:
      - if <def[Damage]> > 14:
        - determine <def[Damage].sub[14]>
      - determine cancelled
