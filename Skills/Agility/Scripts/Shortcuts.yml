# ████████████████████████████████████████████████████
# ██   Passive Skill | Dodge
# ██   
# ██   Notable locations will have special obstacles
# ██   that can only be overcame with agility 
# ██   requirements, and often time ranged or strength 
# ██   requirements as well. This includes things like 
# ██   wall scaling either bare-handed or with a grapple,
# ██   squeezing through narrow cracks and holes and 
# ██   other agile Activities
# ██   
# ██ [ World Script ] ██
Agility_Passive_Dodge:
  type: world
  debug: false
  events:




#%%%   ███ [ Notes ] ███
#%%%   Anything in [brackets] is required... you MUST put it there. 
#%%%   Anything in (parenthesis) is optional... you only need to put it there if you want to. 
#%%%   Anything in {braces} is default... the command will just assume this if no argument is actually typed. 
#%%%   Anything in <> is non-literal... you must change what is inside of it. 
#%%%   Anything outside of <> is literal... you must put it exactly as-is. 

# ███ [ Notable Events ] ███
#+++   [*]: on entity   damaged (by <cause>) (in <area>): 
#+++   AKA: on <entity> damaged (by <cause>) (in <area>), 
#+++   AKA: on  entity  damages     entity   (in <area>), 
#+++   AKA: on  entity  damages    <entity>  (in <area>), 
#+++   AKA: on  entity  damaged by  entity   (in <area>), 
#+++   AKA: on  entity  damaged by <entity>  (in <area>), 
#+++   AKA: on <entity> damages     entity   (in <area>), 
#+++   AKA: on <entity> damaged by  entity   (in <area>), 
#+++   AKA: on <entity> damaged by <entity>  (in <area>), 
#+++   AKA: on <entity> damages    <entity>  (in <area>)
#+++   Triggered: when an entity is damaged. 
#+++   This event can be cancelled. This adds 'context.cancelled', and determines 'CANCELLED' and 'CANCELLED:FALSE'
#+++   Has linked player: when the damager or damaged entity is a player. Cannot be both.
#+++   Has linked NPC:    when the damager or damaged entity is an NPC. Cannot be both.
#+++   Context: <context.entity> returns the dEntity that was damaged.
#+++   Context: <context.damager> returns the dEntity damaging the other entity, if any.
#+++   Context: <context.cause> returns the an Element of reason the entity was damaged - see '!language damage cause' for causes.
#+++   Context: <context.damage> returns an Element(Decimal) of the amount of damage dealt.
#+++   Context: <context.final_damage> returns an Element(Decimal) of the amount of damage dealt, after armor is calculated.
#+++   Context: <context.projectile> returns a dEntity of the projectile, if one caused the event.
#+++   Context: <context.damage_TYPE> returns the damage dealt by a specific damage type where TYPE can be any of: BASE, HARD_HAT, BLOCKING, ARMOR, RESISTANCE, MAGIC, ABSORPTION.
#+++   Switch: with <item>
#+++   Determine: Element(Decimal) to set the amount of damage the entity receives.

# ███ [ Notable Commands ] ███
# ███ [ Flag | {Memory}  ] ███
#+++ [core command] flag: Sets or modifies a flag on the player, NPC, entity, or server.
#+++ Syntax: - flag ({player}/npc/server/<entity>) 
#+++                [<name>([<#>])](:<action>)[:<value>] 
#+++                (duration:<value>)
#+++ Usage: Use to create or set a flag on a player.
#+++   - flag player playstyle:agressive
#+++ Usage: Use to flag an npc with a given tag value.
#+++   - flag npc location:<npc.location>
#+++ Usage: Use to apply mathematical changes to a flag's value on a unique object.
#+++   - flag <context.damager> damage_dealt:+:<context.damage>

# ███ [ Notable Tags     ] ███
#+++ <util.random.decimal>
#+++   Returns a random decimal number from 0 to 1
#+++ <cu@cuboid.notable_name>
#+++   Gets the name of a Notable dCuboid
#+++ <i@item.notable_name>
#+++   Gets the name of a Notable dItem
#+++ <l@location.notable_name>
#+++   Gets the name of a Notable dLocation
#+++ <server.list_notables[<type>]>
#+++   Lists all saved Notables currently on the server.
#+++   Optionally, specify a type: locations, cuboids, ellipsoids, items, inventories
